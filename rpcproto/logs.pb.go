// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpcproto/logs.proto

// Copyright (c) 2018 Donovan Solms / MiningHQ. Licensed under the MIT license.
// See LICENSE in the root of this repository for details.

package rpcproto

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MinerLog holds a miner configuration's logs
type MinerLog struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Logs                 []string `protobuf:"bytes,2,rep,name=Logs,proto3" json:"Logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MinerLog) Reset()         { *m = MinerLog{} }
func (m *MinerLog) String() string { return proto.CompactTextString(m) }
func (*MinerLog) ProtoMessage()    {}
func (*MinerLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_170616927805ff02, []int{0}
}

func (m *MinerLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinerLog.Unmarshal(m, b)
}
func (m *MinerLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinerLog.Marshal(b, m, deterministic)
}
func (m *MinerLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinerLog.Merge(m, src)
}
func (m *MinerLog) XXX_Size() int {
	return xxx_messageInfo_MinerLog.Size(m)
}
func (m *MinerLog) XXX_DiscardUnknown() {
	xxx_messageInfo_MinerLog.DiscardUnknown(m)
}

var xxx_messageInfo_MinerLog proto.InternalMessageInfo

func (m *MinerLog) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MinerLog) GetLogs() []string {
	if m != nil {
		return m.Logs
	}
	return nil
}

// LogsRequest requests logs from a miner
type LogsRequest struct {
	MaxLines             uint32   `protobuf:"varint,1,opt,name=MaxLines,proto3" json:"MaxLines,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogsRequest) Reset()         { *m = LogsRequest{} }
func (m *LogsRequest) String() string { return proto.CompactTextString(m) }
func (*LogsRequest) ProtoMessage()    {}
func (*LogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_170616927805ff02, []int{1}
}

func (m *LogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsRequest.Unmarshal(m, b)
}
func (m *LogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsRequest.Marshal(b, m, deterministic)
}
func (m *LogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsRequest.Merge(m, src)
}
func (m *LogsRequest) XXX_Size() int {
	return xxx_messageInfo_LogsRequest.Size(m)
}
func (m *LogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogsRequest proto.InternalMessageInfo

func (m *LogsRequest) GetMaxLines() uint32 {
	if m != nil {
		return m.MaxLines
	}
	return 0
}

// LogsResponse is returned for LogsRequest
type LogsResponse struct {
	// MinerLogs contains the logs for the rig's configurations
	MinerLogs            []*MinerLog `protobuf:"bytes,1,rep,name=MinerLogs,proto3" json:"MinerLogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LogsResponse) Reset()         { *m = LogsResponse{} }
func (m *LogsResponse) String() string { return proto.CompactTextString(m) }
func (*LogsResponse) ProtoMessage()    {}
func (*LogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_170616927805ff02, []int{2}
}

func (m *LogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsResponse.Unmarshal(m, b)
}
func (m *LogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsResponse.Marshal(b, m, deterministic)
}
func (m *LogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsResponse.Merge(m, src)
}
func (m *LogsResponse) XXX_Size() int {
	return xxx_messageInfo_LogsResponse.Size(m)
}
func (m *LogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogsResponse proto.InternalMessageInfo

func (m *LogsResponse) GetMinerLogs() []*MinerLog {
	if m != nil {
		return m.MinerLogs
	}
	return nil
}

func init() {
	proto.RegisterType((*MinerLog)(nil), "rpcproto.MinerLog")
	proto.RegisterType((*LogsRequest)(nil), "rpcproto.LogsRequest")
	proto.RegisterType((*LogsResponse)(nil), "rpcproto.LogsResponse")
}

func init() { proto.RegisterFile("rpcproto/logs.proto", fileDescriptor_170616927805ff02) }

var fileDescriptor_170616927805ff02 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x2a, 0x48, 0x2e,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0xc9, 0x4f, 0x2f, 0xd6, 0x03, 0x33, 0x85, 0x38, 0x60, 0x82,
	0x4a, 0x06, 0x5c, 0x1c, 0xbe, 0x99, 0x79, 0xa9, 0x45, 0x3e, 0xf9, 0xe9, 0x42, 0x02, 0x5c, 0xcc,
	0xde, 0xa9, 0x95, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x90, 0x10, 0x17, 0x8b,
	0x4f, 0x7e, 0x7a, 0xb1, 0x04, 0x93, 0x02, 0xb3, 0x06, 0x67, 0x10, 0x98, 0xad, 0xa4, 0xc9, 0xc5,
	0x0d, 0xa2, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb8, 0x38, 0x7c, 0x13, 0x2b,
	0x7c, 0x32, 0xf3, 0x52, 0x8b, 0xc1, 0x3a, 0x79, 0x83, 0xe0, 0x7c, 0x25, 0x07, 0x2e, 0x1e, 0x88,
	0xd2, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x03, 0x2e, 0x4e, 0x98, 0x65, 0x20, 0xc5, 0xcc,
	0x1a, 0xdc, 0x46, 0x42, 0x7a, 0x30, 0xa7, 0xe8, 0xc1, 0xa4, 0x82, 0x10, 0x8a, 0x92, 0xd8, 0xc0,
	0x52, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x66, 0x17, 0x87, 0xa7, 0xc6, 0x00, 0x00, 0x00,
}
