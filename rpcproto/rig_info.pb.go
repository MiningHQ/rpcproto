// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpcproto/rig_info.proto

// Copyright (c) 2018 Donovan Solms / MiningHQ. Licensed under the MIT license.
// See LICENSE in the root of this repository for details.

package rpcproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// RigInfoRequest requests the rig information from MiningHQ
type RigInfoRequest struct {
	RigID                string   `protobuf:"bytes,1,opt,name=RigID,proto3" json:"RigID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RigInfoRequest) Reset()         { *m = RigInfoRequest{} }
func (m *RigInfoRequest) String() string { return proto.CompactTextString(m) }
func (*RigInfoRequest) ProtoMessage()    {}
func (*RigInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_096dbfb97abd1b10, []int{0}
}

func (m *RigInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RigInfoRequest.Unmarshal(m, b)
}
func (m *RigInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RigInfoRequest.Marshal(b, m, deterministic)
}
func (m *RigInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RigInfoRequest.Merge(m, src)
}
func (m *RigInfoRequest) XXX_Size() int {
	return xxx_messageInfo_RigInfoRequest.Size(m)
}
func (m *RigInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RigInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RigInfoRequest proto.InternalMessageInfo

func (m *RigInfoRequest) GetRigID() string {
	if m != nil {
		return m.RigID
	}
	return ""
}

// RigInfoResponse is returned for a RigInfo request
type RigInfoResponse struct {
	// Name if the name of the rig
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// Link is the link to the rig's page on MiningHQ
	Link                 string   `protobuf:"bytes,2,opt,name=Link,proto3" json:"Link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RigInfoResponse) Reset()         { *m = RigInfoResponse{} }
func (m *RigInfoResponse) String() string { return proto.CompactTextString(m) }
func (*RigInfoResponse) ProtoMessage()    {}
func (*RigInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_096dbfb97abd1b10, []int{1}
}

func (m *RigInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RigInfoResponse.Unmarshal(m, b)
}
func (m *RigInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RigInfoResponse.Marshal(b, m, deterministic)
}
func (m *RigInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RigInfoResponse.Merge(m, src)
}
func (m *RigInfoResponse) XXX_Size() int {
	return xxx_messageInfo_RigInfoResponse.Size(m)
}
func (m *RigInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RigInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RigInfoResponse proto.InternalMessageInfo

func (m *RigInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RigInfoResponse) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func init() {
	proto.RegisterType((*RigInfoRequest)(nil), "rpcproto.RigInfoRequest")
	proto.RegisterType((*RigInfoResponse)(nil), "rpcproto.RigInfoResponse")
}

func init() { proto.RegisterFile("rpcproto/rig_info.proto", fileDescriptor_096dbfb97abd1b10) }

var fileDescriptor_096dbfb97abd1b10 = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x2a, 0x48, 0x2e,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0xca, 0x4c, 0x8f, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x03, 0x73,
	0x85, 0x38, 0x60, 0x12, 0x4a, 0x6a, 0x5c, 0x7c, 0x41, 0x99, 0xe9, 0x9e, 0x79, 0x69, 0xf9, 0x41,
	0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x22, 0x5c, 0xac, 0x20, 0x11, 0x17, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0xce, 0x20, 0x08, 0x47, 0xc9, 0x92, 0x8b, 0x1f, 0xae, 0xae, 0xb8, 0x20, 0x3f, 0xaf,
	0x38, 0x55, 0x48, 0x88, 0x8b, 0xc5, 0x2f, 0x31, 0x37, 0x15, 0xaa, 0x0e, 0xcc, 0x06, 0x89, 0xf9,
	0x64, 0xe6, 0x65, 0x4b, 0x30, 0x41, 0xc4, 0x40, 0xec, 0x24, 0x36, 0xb0, 0x4d, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x07, 0x94, 0xa5, 0x60, 0x8e, 0x00, 0x00, 0x00,
}
