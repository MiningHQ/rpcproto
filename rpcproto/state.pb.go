// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpcproto/state.proto

// Copyright (c) 2018 Donovan Solms / MiningHQ. Licensed under the MIT license.
// See LICENSE in the root of this repository for details.

package rpcproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MinerState holds the possible miner states
type MinerState int32

const (
	// UnknownState
	MinerState_UnknownState MinerState = 0
	// StartMining starts the miner
	MinerState_StartMining MinerState = 1
	// Mining indicates the miner(s) are running
	MinerState_Mining MinerState = 2
	// StartMining stops the miner
	MinerState_StopMining MinerState = 3
)

var MinerState_name = map[int32]string{
	0: "UnknownState",
	1: "StartMining",
	2: "Mining",
	3: "StopMining",
}

var MinerState_value = map[string]int32{
	"UnknownState": 0,
	"StartMining":  1,
	"Mining":       2,
	"StopMining":   3,
}

func (x MinerState) String() string {
	return proto.EnumName(MinerState_name, int32(x))
}

func (MinerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bd92d90f4dceef24, []int{0}
}

// StateRequest updates a miner's state
type StateRequest struct {
	// State is the state to update to
	State                MinerState `protobuf:"varint,1,opt,name=State,proto3,enum=rpcproto.MinerState" json:"State,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StateRequest) Reset()         { *m = StateRequest{} }
func (m *StateRequest) String() string { return proto.CompactTextString(m) }
func (*StateRequest) ProtoMessage()    {}
func (*StateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd92d90f4dceef24, []int{0}
}

func (m *StateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateRequest.Unmarshal(m, b)
}
func (m *StateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateRequest.Marshal(b, m, deterministic)
}
func (m *StateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateRequest.Merge(m, src)
}
func (m *StateRequest) XXX_Size() int {
	return xxx_messageInfo_StateRequest.Size(m)
}
func (m *StateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StateRequest proto.InternalMessageInfo

func (m *StateRequest) GetState() MinerState {
	if m != nil {
		return m.State
	}
	return MinerState_UnknownState
}

// StateResponse is returned for a StateRequest
type StateResponse struct {
	// StatusCode is the HTTP status code
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	// Status is the text representation of StatusCode
	Status string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	// Reason for StatusCode when StatusCode is an error
	Reason               string   `protobuf:"bytes,3,opt,name=Reason,proto3" json:"Reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateResponse) Reset()         { *m = StateResponse{} }
func (m *StateResponse) String() string { return proto.CompactTextString(m) }
func (*StateResponse) ProtoMessage()    {}
func (*StateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd92d90f4dceef24, []int{1}
}

func (m *StateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateResponse.Unmarshal(m, b)
}
func (m *StateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateResponse.Marshal(b, m, deterministic)
}
func (m *StateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateResponse.Merge(m, src)
}
func (m *StateResponse) XXX_Size() int {
	return xxx_messageInfo_StateResponse.Size(m)
}
func (m *StateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StateResponse proto.InternalMessageInfo

func (m *StateResponse) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *StateResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StateResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterEnum("rpcproto.MinerState", MinerState_name, MinerState_value)
	proto.RegisterType((*StateRequest)(nil), "rpcproto.StateRequest")
	proto.RegisterType((*StateResponse)(nil), "rpcproto.StateResponse")
}

func init() { proto.RegisterFile("rpcproto/state.proto", fileDescriptor_bd92d90f4dceef24) }

var fileDescriptor_bd92d90f4dceef24 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xcf, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0x4d, 0x8b, 0x45, 0xc7, 0xb6, 0x96, 0xa1, 0x48, 0x4f, 0x52, 0x7a, 0x2a, 0x3d, 0x54,
	0xd0, 0x9b, 0x57, 0x8f, 0xd2, 0x4b, 0x8a, 0x67, 0xa9, 0x1a, 0xa4, 0x2c, 0x4c, 0xb2, 0x49, 0xca,
	0xfe, 0xfb, 0x4b, 0x7e, 0x94, 0xdd, 0xdb, 0xfb, 0xbe, 0xbc, 0x24, 0x33, 0x50, 0x6b, 0xf5, 0xab,
	0xb4, 0xb4, 0xf2, 0xc5, 0xd8, 0xc5, 0x8a, 0xd1, 0x67, 0xbc, 0xdb, 0x6d, 0xf7, 0x0e, 0xf9, 0xec,
	0x0e, 0xb8, 0x38, 0x6e, 0xc2, 0x58, 0x1c, 0xe0, 0xd6, 0x73, 0xc3, 0x5a, 0xd6, 0x97, 0xaf, 0xf5,
	0xb8, 0x37, 0xc7, 0x69, 0x25, 0xa1, 0x43, 0x37, 0x54, 0xba, 0x6f, 0x28, 0xe2, 0x5d, 0xa3, 0x24,
	0x19, 0x81, 0xcf, 0x00, 0x4e, 0x6c, 0xe6, 0x43, 0xfe, 0x85, 0x17, 0x0a, 0x7e, 0x65, 0xf0, 0x09,
	0xb2, 0x40, 0x4d, 0xd2, 0xb2, 0xfe, 0x9e, 0x47, 0x72, 0x9e, 0x8b, 0xc5, 0x48, 0x6a, 0xd2, 0xe0,
	0x03, 0x0d, 0x9f, 0x00, 0x97, 0x5f, 0xb1, 0x82, 0xfc, 0x8b, 0x0e, 0x24, 0x4f, 0xe4, 0xb9, 0xba,
	0xc1, 0x47, 0x78, 0x98, 0xed, 0xa2, 0xed, 0xb4, 0xd2, 0x4a, 0xff, 0x15, 0x43, 0x80, 0x2c, 0xe6,
	0x04, 0x4b, 0x37, 0x8c, 0x54, 0x91, 0xd3, 0x9f, 0xcc, 0xaf, 0xf1, 0x76, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0xc4, 0xdc, 0x5a, 0x9a, 0x12, 0x01, 0x00, 0x00,
}
