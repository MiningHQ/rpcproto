// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpcproto/stats.proto

// Copyright (c) 2018 Donovan Solms / MiningHQ. Licensed under the MIT license.
// See LICENSE in the root of this repository for details.

package rpcproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CPUStats contains the CPU stats
type CPUStats struct {
	ThreadsHashrate      []float64 `protobuf:"fixed64,1,rep,packed,name=ThreadsHashrate,proto3" json:"ThreadsHashrate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CPUStats) Reset()         { *m = CPUStats{} }
func (m *CPUStats) String() string { return proto.CompactTextString(m) }
func (*CPUStats) ProtoMessage()    {}
func (*CPUStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_f515951261dd90e2, []int{0}
}

func (m *CPUStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPUStats.Unmarshal(m, b)
}
func (m *CPUStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPUStats.Marshal(b, m, deterministic)
}
func (m *CPUStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPUStats.Merge(m, src)
}
func (m *CPUStats) XXX_Size() int {
	return xxx_messageInfo_CPUStats.Size(m)
}
func (m *CPUStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CPUStats.DiscardUnknown(m)
}

var xxx_messageInfo_CPUStats proto.InternalMessageInfo

func (m *CPUStats) GetThreadsHashrate() []float64 {
	if m != nil {
		return m.ThreadsHashrate
	}
	return nil
}

// CPUStats contains all the stats for a miner
type MinerStats struct {
	// Key identifies this miner's configuration on MiningHQ
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	// Hashrate is the current miner hashrate
	Hashrate float64 `protobuf:"fixed64,2,opt,name=Hashrate,proto3" json:"Hashrate,omitempty"`
	// MaxHashrate is the highest hashrate achieved since start
	MaxHashrate float64 `protobuf:"fixed64,3,opt,name=MaxHashrate,proto3" json:"MaxHashrate,omitempty"`
	// TotalHashes is the total number of hashes submitted
	TotalHashes uint64 `protobuf:"varint,4,opt,name=TotalHashes,proto3" json:"TotalHashes,omitempty"`
	// CurrentDifficulty is the current pool given difficulty
	CurrentDifficulty uint64 `protobuf:"varint,5,opt,name=CurrentDifficulty,proto3" json:"CurrentDifficulty,omitempty"`
	// TotalShares is the total amount of shares produced since start
	TotalShares uint32 `protobuf:"varint,6,opt,name=TotalShares,proto3" json:"TotalShares,omitempty"`
	// AcceptedShares is the number of pool accepted shares since start
	AcceptedShares uint32 `protobuf:"varint,7,opt,name=AcceptedShares,proto3" json:"AcceptedShares,omitempty"`
	// RejectedShares is the number of pool rejected shares
	RejectedShares uint32 `protobuf:"varint,8,opt,name=RejectedShares,proto3" json:"RejectedShares,omitempty"`
	// CPUs hold the CPU stats of the miner
	CPUs                 []*CPUStats `protobuf:"bytes,9,rep,name=CPUs,proto3" json:"CPUs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MinerStats) Reset()         { *m = MinerStats{} }
func (m *MinerStats) String() string { return proto.CompactTextString(m) }
func (*MinerStats) ProtoMessage()    {}
func (*MinerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_f515951261dd90e2, []int{1}
}

func (m *MinerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinerStats.Unmarshal(m, b)
}
func (m *MinerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinerStats.Marshal(b, m, deterministic)
}
func (m *MinerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinerStats.Merge(m, src)
}
func (m *MinerStats) XXX_Size() int {
	return xxx_messageInfo_MinerStats.Size(m)
}
func (m *MinerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_MinerStats.DiscardUnknown(m)
}

var xxx_messageInfo_MinerStats proto.InternalMessageInfo

func (m *MinerStats) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MinerStats) GetHashrate() float64 {
	if m != nil {
		return m.Hashrate
	}
	return 0
}

func (m *MinerStats) GetMaxHashrate() float64 {
	if m != nil {
		return m.MaxHashrate
	}
	return 0
}

func (m *MinerStats) GetTotalHashes() uint64 {
	if m != nil {
		return m.TotalHashes
	}
	return 0
}

func (m *MinerStats) GetCurrentDifficulty() uint64 {
	if m != nil {
		return m.CurrentDifficulty
	}
	return 0
}

func (m *MinerStats) GetTotalShares() uint32 {
	if m != nil {
		return m.TotalShares
	}
	return 0
}

func (m *MinerStats) GetAcceptedShares() uint32 {
	if m != nil {
		return m.AcceptedShares
	}
	return 0
}

func (m *MinerStats) GetRejectedShares() uint32 {
	if m != nil {
		return m.RejectedShares
	}
	return 0
}

func (m *MinerStats) GetCPUs() []*CPUStats {
	if m != nil {
		return m.CPUs
	}
	return nil
}

// StatsRequest requests stats from the miner
type StatsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsRequest) Reset()         { *m = StatsRequest{} }
func (m *StatsRequest) String() string { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()    {}
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f515951261dd90e2, []int{2}
}

func (m *StatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsRequest.Unmarshal(m, b)
}
func (m *StatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsRequest.Marshal(b, m, deterministic)
}
func (m *StatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsRequest.Merge(m, src)
}
func (m *StatsRequest) XXX_Size() int {
	return xxx_messageInfo_StatsRequest.Size(m)
}
func (m *StatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatsRequest proto.InternalMessageInfo

// StateResponse is sent in response to a StatsRequest and periodically
type StatsResponse struct {
	// Stats contains the miner's stats
	Stats                []*MinerStats `protobuf:"bytes,1,rep,name=Stats,proto3" json:"Stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StatsResponse) Reset()         { *m = StatsResponse{} }
func (m *StatsResponse) String() string { return proto.CompactTextString(m) }
func (*StatsResponse) ProtoMessage()    {}
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f515951261dd90e2, []int{3}
}

func (m *StatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsResponse.Unmarshal(m, b)
}
func (m *StatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsResponse.Marshal(b, m, deterministic)
}
func (m *StatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsResponse.Merge(m, src)
}
func (m *StatsResponse) XXX_Size() int {
	return xxx_messageInfo_StatsResponse.Size(m)
}
func (m *StatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatsResponse proto.InternalMessageInfo

func (m *StatsResponse) GetStats() []*MinerStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func init() {
	proto.RegisterType((*CPUStats)(nil), "rpcproto.CPUStats")
	proto.RegisterType((*MinerStats)(nil), "rpcproto.MinerStats")
	proto.RegisterType((*StatsRequest)(nil), "rpcproto.StatsRequest")
	proto.RegisterType((*StatsResponse)(nil), "rpcproto.StatsResponse")
}

func init() { proto.RegisterFile("rpcproto/stats.proto", fileDescriptor_f515951261dd90e2) }

var fileDescriptor_f515951261dd90e2 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4f, 0xc2, 0x30,
	0x14, 0xc7, 0x53, 0x06, 0x38, 0x1e, 0x82, 0xda, 0x70, 0x68, 0x3c, 0x35, 0x3b, 0x90, 0xc6, 0x18,
	0x4c, 0xd0, 0x9b, 0x27, 0x83, 0x07, 0x13, 0x43, 0x42, 0x0a, 0xfc, 0x01, 0x75, 0x3c, 0xb2, 0x19,
	0xb2, 0xcd, 0xb6, 0x4b, 0xe4, 0x1f, 0xf4, 0xef, 0x32, 0xeb, 0xd8, 0x0f, 0xf1, 0xf6, 0xde, 0xe7,
	0xfb, 0xe9, 0x3b, 0x7c, 0x0b, 0x13, 0x9d, 0x85, 0x99, 0x4e, 0x6d, 0xfa, 0x60, 0xac, 0xb2, 0x66,
	0xe6, 0x66, 0xea, 0x57, 0x34, 0x78, 0x02, 0x7f, 0xb1, 0xda, 0xae, 0x8b, 0x8c, 0x0a, 0xb8, 0xda,
	0x44, 0x1a, 0xd5, 0xce, 0xbc, 0x29, 0x13, 0x69, 0x65, 0x91, 0x11, 0xee, 0x09, 0x22, 0xcf, 0x71,
	0xf0, 0xd3, 0x01, 0x58, 0xc6, 0x09, 0xea, 0xf2, 0xe1, 0x35, 0x78, 0xef, 0x78, 0x64, 0x84, 0x13,
	0x31, 0x90, 0xc5, 0x48, 0x6f, 0xc1, 0xaf, 0x6f, 0x74, 0x38, 0x11, 0x44, 0xd6, 0x3b, 0xe5, 0x30,
	0x5c, 0xaa, 0xef, 0x3a, 0xf6, 0x5c, 0xdc, 0x46, 0x85, 0xb1, 0x49, 0xad, 0x3a, 0x14, 0x00, 0x0d,
	0xeb, 0x72, 0x22, 0xba, 0xb2, 0x8d, 0xe8, 0x3d, 0xdc, 0x2c, 0x72, 0xad, 0x31, 0xb1, 0xaf, 0xf1,
	0x7e, 0x1f, 0x87, 0xf9, 0xc1, 0x1e, 0x59, 0xcf, 0x79, 0xff, 0x83, 0xfa, 0xde, 0x3a, 0x52, 0x1a,
	0x0d, 0xeb, 0x73, 0x22, 0x46, 0xb2, 0x8d, 0xe8, 0x14, 0xc6, 0x2f, 0x61, 0x88, 0x99, 0xc5, 0xdd,
	0x49, 0xba, 0x70, 0xd2, 0x19, 0x2d, 0x3c, 0x89, 0x9f, 0x18, 0x36, 0x9e, 0x5f, 0x7a, 0x7f, 0x29,
	0x9d, 0x42, 0x77, 0xb1, 0xda, 0x1a, 0x36, 0xe0, 0x9e, 0x18, 0xce, 0xe9, 0xac, 0xea, 0x7b, 0x56,
	0x95, 0x2d, 0x5d, 0x1e, 0x8c, 0xe1, 0xb2, 0x5c, 0xf1, 0x2b, 0x47, 0x63, 0x83, 0x67, 0x18, 0x9d,
	0x76, 0x93, 0xa5, 0x89, 0x41, 0x7a, 0x07, 0x3d, 0x07, 0xdc, 0x4f, 0x0c, 0xe7, 0x93, 0xe6, 0x52,
	0xd3, 0xbf, 0x2c, 0x95, 0x8f, 0xbe, 0x0b, 0x1e, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x98,
	0xdb, 0x06, 0xf4, 0x01, 0x00, 0x00,
}
